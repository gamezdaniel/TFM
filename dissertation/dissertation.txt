COVER
LICENSE
ABSTRACT
ACKNOWLEDGEMENTS
CONTENTS
LIST OF FIGURES
LIST OF TABLES

1. INTRODUCTION

  Set out the background to the research study and address the following areas:

  A. The context in which the research took place
  - The background, the context
  - Why is this subject or issue important
  - Who are the key participants and/or ‘actors’ in the area under investigation
  - Important trends or pivotal variables of which the reader needs to be made aware
  - A clear and succinct statement of the aims and objectives that the dissertation is going to address

  B. The reasons why this study was carried out
  -  this study was undertaken in order to test some aspect of business practices
  - research carried out to fulfill the demands of a business organization

  C. The way the Dissertation is to be organized
  - Document structure, the way the dissertation is going to be organized
  - Disposition of the document

  This short final section of the Introduction should tell the reader what topics are going to be discussed in each of the chapters and how the chapters are related to each other. At a glance, they can see (1) where they are starting from, (2) the context in which the journey is taking place, (3) where they are going to end up, and (4) the route which they will take to reach their final destination.

\noindent With the growing use of cloud-oriented systems and the need for this information to be always available, online systems play an increasingly important role in our society nowadays. The technologies that support such schemes have evolved fleetingly and today there are numerous ways to get this kind of solutions, from proprietary software implementations, tools oriented to corporate environments that can be even based on FLOSS products and a variety of business models, to FLOSS standalone tools representing a robust solution to meet today's demands.\\

\texttrademark \ 
~\cite{Daffara2}

  
2. PROBLEM STATEMENT

  There is a problem in ___________(societal organization). 
  Despite _________________ (something that should be happening) ___________ is occurring. 
  [provided supporting evidence]. 
  This problem has negatively impacted ____________(victims of problem) because _________________. 
  A possible cause of this problem is ___________.
  Perhaps a study which investigates ___________ by ________(paradigm/method) could remedy the situation.

  * Describe the "ideal" state of affairs
  - Start by describing how things should work. 
  - Before you even mention your problem, explain in a few sentences how things would be if the problem didn't exist

  * Explain your problem
  - Succinctly summarize the problem you intend to solve
  - "However, ..." to show that the problem you've identified is what is preventing the ideal vision from being a reality

  * Explain your problem's financial costs?
  - Explain why it's a big deal, no one has the time or resources to try to solve every single minor problem
  - In the business world, money is almost always the bottom line, so you'll want to try to highlight the financial impact of your problem on the company or organization
  - Is it damaging your brand image and thus indirectly costing your business money? (i.e. SLAs)

  * Back up your assertions
  - Propose reasonable evidence
  - From your own research, from data from a related study or project, or even from reputable third-party sources

  * Propose a solution
  - Explanation of the solution should be written to be as clear and concise as possible
  - Stick to big, important, concrete concepts and leave any minor details for later

  * Explain the benefits of the solution
  - Explain why this solution is a good idea
  - Which new forms of revenue it will generate (quality services to customers)

  * Conclude by summarizing the problem and solution
  - Conclude with a summary of your main arguments that allows you transition easily into the main body of your proposal
  - State in just a few sentences


    2.1. JUSTIFICATION / MOTIVATION
      - The reasons why this study was carried out
      -  research carried out to fulfil the demands of a business organisation
      
    2.2. OBJETIVES
	- General objetives
	- Specific objetives
	
    2.3. SCOPE

3. PRECEDENTS / RELEATED TECHNOLOGIES / STATE OF THE ART

    - High Availability solutions based in FLOSS
    - Commercial cluster software

    
HP Serviceguard

Licensing
http://h20564.www2.hp.com/hpsc/doc/public/display?docId=emr_na-c02199685


    
    
  SUSE Linux Enterprise High Availability Extension (https://www.suse.com/products/highavailability)
  1-Year Subscription 590,00€ (2 sockets)
  3-Year Subscription 1.570,00€ (2 sockets)
  5-Year Subscription 2.330,00€ (2 sockets)
  
  https://www.suse.com/documentation/sle_ha/book_sleha/data/book_sleha.html
  https://www.suse.com/products/highavailability/features/

  
  - Multiple clustering scenarios, as active/active and active/passive configurations, as well as hybrid physical and virtual clusters
  - Supports mixed clustering, physical and virtual Linux servers, based on Xen and KVM hypervisors
  - Corosync messaging and membership layer, also Pacemaker cluster resource manager
  - Storage and data replication supporting Fibre Channel or iSCSI SAN
  - Cluster-aware file systems with cLVM and OCFS2 as volume manager
  - Supports replication through DRBD
  - Samba clustering with CTDB
  - Provides resource agent manager OCF
  - GUI and CLI administration tools, such as YaST, Hawk and crm
  
  openSUSE:High Availability (https://en.opensuse.org/openSUSE:High_Availability)

  Historically these packages were split into two projects; network:ha-clustering (stable packages) and network:ha-clustering:Factory (unstable/development for the next openSUSE release). As of August 2013, we have transitioned to the following project structure.. 
  
  Red Hat Cluster Suite
  Is suggested an architecture review of the cluster, by submitting a support ticket to Red Hat.
    
  "Downtime is costly to your business"
  
  "When mission-critical applications fail, so does your business. This often is a true statement in today's environments, where most organizations spend millions of dollars making their services available 24/7, 365 days a year."
  http://www.linuxjournal.com/article/9759

  "eliminate single points of failure. It ensures the high availability and manageability of critical network resources including data, applications, and services. Thus, it helps you maintain business continuity, protect data integrity, and reduce unplanned downtime for your mission-critical Linux workloads."
    
  Evolution of commercial HA tools (Figure): http://www.hpintelco.net/sglx/service.html
  https://enterprisersproject.com/article/2015/1/top-advantages-open-source-offers-over-proprietary-solutions

  
  - Corosync (http://corosync.github.io/corosync)
  - DRBD (http://www.drbd.org)
  - OCFS2 (http://oss.oracle.com/projects/ocfs2)
  - Pacemaker (http://clusterlabs.org)
  
  
  Linux-HA (http://www.linux-ha.org/wiki/Main_Page)

  provides features based on C programming language, implementing high availability within applications, through virtual synchrony for replicated state machines, simple availability handling responsible for applications restart when fail, it keeps configuration and statistics in a memory database providing the ability to set, retrieve, and receive change notifications of information, and a quorum system that notifies applications when it is achieved or lost.

  an open source high availability resource manager software used on computer clusters since 2004
  
  It implements APIs for resources controll, including the Open Cluster Framework (OCF).
  
  It was part of the Linux-HA project until 2007, then was split out to be its own project.

  is a command-line interface to the Pacemaker cluster resource management stack
  
  initially, the crm shell was distributed as part of the Pacemaker project. It was split into its own, separate project in 2011.
  
  manages the cluster configuration and provides configuration information to other cluster components in a Red Hat cluster. CCS runs in each cluster node and makes sure that the cluster configuration file in each cluster node is up to date.
  
  
  
4. METHODOLOGY
    - Qualitative/Quantitative Research Methods to select the technologies used


Collecting and read as much information related to the project is available and select the appropriate solution from a matching set that fulfill the requirements.

Additionally at using MetricsGrimoire [5], a flexible toolset which allow to obtain data from repositories related to software development, is possible to analyze databases that can later be mined for specific patterns or summaries of activity, allowing to establish objective comparisons
in relation to the projects analyzed.



Resultaria ideal poder comparar un conjunto de herramientas de FLOSS que solventen las necesidades de los requerimientos pleanteados, ..perform a an assessment over them.. y elegir el software mas adecuado. 

replicacion de disco (a nivel de bloques) para obtener redundancia de datos

* DRBD = maneja el recurso compartido que vendria siendo el FS /opt
  HA clusters with block-level asynchronous replication

  Alternatives:

    SAN: are great in terms of management, even though they’re sometimes prohibitively expensive.
    You’re dealing with a single point of failure. SAN box does not offer physically distributed redundancy at the data level.

    RAID: host-based mirroring between a local device, and a network block device.


En efecto existen metodologias especializadas para evaluacion de proyectos de FLOSS tales como OpenBRR, QSoS o QualOSS que lo permiten, sin embargo en el area de HA la diversidad de soluciones basadas en FLOSS disponibles en la actualidad es escaza.

A medida que estas soluciones evolucionen y exista una mayor competencia para su desarrollo, sin duda sera oportuno hacer una comparativa entre los distintos tipos de software (FLOSS) que provean...

Pero por el momento la eleccion de las herramientas a utilizar se limita a ..?


Two separate groups:
- one mostly concerned with the cluster messaging
- one concerned with cluster resources

* Heartbeat: messaging mechanism, keeping the status of each node. Included Cluster Resource Manager (a process to manage services), but was removed and evolved into its own project known as Pacemaker.

Development of heartbeat has slowed down and so now (according to pacemaker's website) corosync is considered the superior service.

* Pacemaker = Se encarga de llevar los recursos, (FS, Servicios, archivos, direcciones IP) es decir los gestiona para pasarlos de un servidor a otro. Pacemaker works as a resource manager for either of these two projects (Heartbeat & Corosync).

* Corosync = es el mediador que se encarga con ayuda de agentes de heartbeat de velar que los nodos esten arriba.
A competing cluster messaging layer software (also known as Group Communication System) was born which added functionality over heartbeat.

Two clustering configurations to choose:
Heartbeat + Pacemaker
Corosync + Pacemaker


    
5. ARCHITECTURE

    5.1. Netnovation...?

    - Implement an inexpensive high-availability solution for our business-critical needs without requiring the use of expensive additional hardware or software
    
    - Complexity and advanced planning no needed

    - i.e. Two sets of simple storage devices are less expensive than a dual-port RAID box of similar capacity

    - Cluster Load Balancing
      Is difficult when read/write or transactional type of services such as e-mail or database access
      It would also require the disk mirroring to be near-instantaneous and use lots of distributed locking techniques
      
      In a two-node cluster, half of the required services on node 'A' and the other half on node 'B'
      A mutual failover configuration is employed so that if node A fails, node B would take over all of its services and vice versa

      http://www.linuxjournal.com/article/3247?page=0,1

      A symmetric general purpose kernel based cluster manager, formed by a Connection Manager (cnxman) and a Service Manager (sm). The first one handles membership, messaging, quorum, event notification and transitions, and the second one is responsible for instances of external systems.
      
      in order to be specific in this exercise,
      
      
      
      
    5.2. Infrastructure
    5.3. Hardware
    
    PowerEdge Rack Servers
    Unified Threat Management Firewall
    Netgear Gigabit Ports and 24 PoE Ports
    20U RACK CABINET
    Intel Xeon CPU
    Small Computer System Interface
    hard disk drive
    
    5.4. Network
    5.5. Software
    5.6. Overall Scheme


\begin{table}
\centering
\begin{tabular}{ | l | c | r | }
  \hline
  1 & 2 
  \\
  4 & 5
  \hline
\end{tabular}  
\caption{Software Supporting the Infrastructure}
\label{table:technologies}
\end{table}
    
    
UTM Endian Firewall
Company: Endian S.r.l.
Industry: Unified Threat Management
License: GNU GPL
Website: endian.com
Description: A linux security distribution with full featured Unified Threat Management functionality. Include a stateful packet inspection firewall, application-level proxies for various protocols, antivirus support, virus and spam-filtering for email traffic, content filtering of Web traffic, also an OpenVPN solution. Distribution based on Red Hat.
Supported Platforms: GNU/Linux
Commercial support: by annual subscription
    

Proxmox VE
Company: Proxmox Server Solutions GmbH
Industry: Server Virtualization
License: GNU Affero and GPLv3
Website: pve.proxmox.com
Description: virtualization management solution for servers, based on KVM and containers Server Virtualization Platform, provides KVM and OpenVZ hypervisors. Distribution based on Debian.
Supported Platforms: GNU/Linux
Commercial support: annual subscription

FreeNAS
Company: iXsystems, Inc.
Type: Computer Storage
License: BSD 2-Clause
Website: freenas.org
Description: network-attached storage server, supporting many network and storage protocols such as Samba and NFS. Also supports ZFS. Distribution based on FreeBSD.
Supported Platforms: BSD Unix
Commercial support: custom quotes and support tickets

Zabbix
Company: Zabbix SIA
Industry: IT Monitoring
License: GNU GPLv2
Website: zabbix.com
Description: solution for monitoring of networks, applications and databases
Supported Platforms: GNU/Linux
Commercial support: custom quotes and support tickets 

---

pcs \ resource \ create \ VIP1 \ IPaddr2 \ ip=172.17.18.190 \ \textbackslash \\
	broadcast=172.17.18.255 \ nic=eth0 \ cidr\_netmask=24 \textbackslash \\
	iflabel=VIP1 \ op \ monitor \ interval=30s \ timeout=30s

\textminus \textminus -

6. IMPLEMENTATION    

    6.1. Technical specifications of implemented FLOSS tools
    6.2. Tests and validation
    6.3. Other considerations

7. RESULTS AND DISCUSSION

--------
Results presents the evidence and results of primary research which you have undertaken:

- This section should set out your key experimental results, including any statistical analysis and whether or not the results of these are significant

- should cover any literature supporting your interpretation of significance

- You should write your results section in the past tense: you are describing what you have done in the past

- Having decided what to include, next decide what order to use. You could choose chronological, which should follow the methods, or in order from most to least important in the answering of your research questions, or by research question and/or hypothesis


Discussion section has four purposes:

  - Interpret and explain your results

  - Answer your research question

  - Justify your approach

  - Critically evaluate your study

  -  written in the present tense

  - review your findings in the context of the literature and the existing knowledge about the subject.

  - demonstrate that you understand the limitations of your research and the implications of your findings for policy and practice
  
--------

* Tools and metrics: Page 106 Sergio's TFM *
Python, matplotlib [mat14a], has been used to generate graphics for certain metrics.
A python 2d plotting library. 2014. http://matplotlib.org.

python2 boxplots.py cvsanaly_nova
python3 boxplots.py cvsanaly_nova
python boxplots.py cvsanaly_nova

+--------------------+
| Database           |
+--------------------+
| cvsanaly_corosync  |
| cvsanaly_drbd      |
| cvsanaly_pacemaker |
+--------------------+

python2 commits_per_commiter.py cvsanaly_corosync
  max: 192
  min: 1
  mean: 31.0833333333
  median: 8.0
  std: 52.4769129131
  .25 quartile: 2.0
  .50 quartile: 8.0
  .75 quartile: 29.0

python2 commits_per_commiter.py cvsanaly_drbd
  max: 20
  min: 1
  mean: 7.5625
  median: 6.5
  std: 6.06185563586
  .25 quartile: 2.75
  .50 quartile: 6.5
  .75 quartile: 10.5
  
python2 commits_per_commiter.py cvsanaly_pacemaker
  max: 192
  min: 4
  mean: 34.3428571429
  median: 16.0
  std: 45.4268283583
  .25 quartile: 9.0
  .50 quartile: 16.0
  .75 quartile: 37.0


- Collaboration to community: http://community.zimbra.com/collaboration/f/1888/t/1136032
- Give credit to GNU matplotlib



Developers with the most number of commits:
SELECT p.name, count(distinct(s.id)) from people p, scmlog s where p.id=s.author_id GROUP BY p.name order by count(distinct(s.id)) desc;

Developers who have modified most different files during the whole proyect history:
SELECT p.name, count(distinct(a.file_id)) FROM people p, scmlog s, actions a WHERE a.commit_id=s.id AND s.author_id=p.id GROUP BY p.name ORDER BY COUNT(distinct(a.file_id)) desc;

Number of files modified only by one developer:
SELECT COUNT(p.email) FROM scmlog s, people p, file_links fl WHERE fl.commit_id=s.id AND s.committer_id=p.id GROUP BY fl.file_path HAVING COUNT(p.email)=1;

Number of messages for year 20xy:
SELECT count(*) FROM messages where year(first_date) = 2013;

Number of commiters in year 2012:
SELECT COUNT(s.id) FROM scmlog s, people p WHERE YEAR(s.date)="2012" AND s.committer_id=p.id;

Number of commiters in the last month (November 2013):
SELECT COUNT(DISTINCT(p.id)) FROM scmlog s, people p WHERE s.committer_id=p.id AND YEAR(s.date)="2013" AND MONTH(s.date)="11";

Number of commits in the last month (November 2013):
SELECT COUNT(s.id) FROM scmlog s, people p WHERE s.committer_id=p.id AND YEAR(s.date)="2013" AND MONTH(s.date)="11";

Top 20 committers in the project:
  SELECT p.name, count(distinct(s.id)) as "Number of commits" from people p, scmlog s where p.id=s.author_id group by p.name
  order by count(distinct(s.id)) desc LIMIT 20;

---
  %\item Number of messages for year 2014:\\
  %SELECT COUNT(*) FROM messages WHERE year(first\_date)=2014;

  % Territoriality
  %\item Number of files modified only by one developer:\\
  %SELECT COUNT(p.email) FROM scmlog s, people p, file\_links fl WHERE fl.commit\_id=s.id AND s.committer\_id=p.id GROUP BY fl.file\_path HAVING COUNT(p.email)=1;

  %\item Most number of commits by developer:\\
  %SELECT p.name, COUNT(DISTINCT(s.id)) FROM people p, scmlog s WHERE p.id=s.author\_id GROUP BY p.name ORDER BY COUNT(DISTINCT(s.id)) DESC;

  %\item Developers who have modified most different files during the whole proyect history:\\
  %SELECT p.name, COUNT(DISTINCT(a.file\_id)) FROM people p, scmlog s, actions a WHERE a.commit\_id=s.id AND s.author\_id=p.id GROUP BY p.name ORDER BY COUNT(distinct(a.file\_id)) DESC;

  %\item Top 15 committers in the project:\\
  %SELECT p.name, COUNT(DISTINCT(s.id)) AS ``Number of commits" FROM people p, scmlog s WHERE p.id=s.author\_id GROUP BY p.name ORDER BY COUNT(DISTINCT(s.id)) DESC LIMIT 15;
---
  
  Corosync:
  git clone https://github.com/corosync/corosync

  mysql -uroot
  create database cvsanaly_corosync;
  exit
  cd /path/to/cloned/dir
  cvsanaly2 --db-database=cvsanaly_corosync


  DRBD:
  git://git.drbd.org/drbd-8.4.git

  Pacemaker:
    mysql
    create database cvsanaly_
    git clone https://github.com/ClusterLabs/pacemaker
    cd pacemaker/
    cvsanaly2 -u root -d cvsanaly_pacemaker


8. CONCLUSIONS AND FUTURE WORK

- Raise the contras of Cloud (stated in PROBLEM STATEMENT - [Mell Peter]) by Stallman & Co
- Enterprise HA cluster solutions are a mix of FLOSS technologies (as in RHCS) that have been adapted into a single one
- Individual solutions do not offer enough reliability as Company ones
- 

* Conclusions regarding the goals or hypotheses presented in the Introduction,


The cloud-oriented systems have been increasingly disseminated, and certainly facilitating the daily activities at companies of any kind that implement this scheme.

Adopting a cloud platform has important implications, at both economic and ethical levels. An SME which contemplates moving its IT infrastructure operations to the cloud should consider for example the costs associated with the transformation, migration, deployment, ongoing, hosting charges and downtime times covered by the SLA, and compare them with the costs involved in maintaining this infrastructure on premises, as well as guarantee its accessibility.

Another key factor to consider is the safety of the data belonging to the company that migrates to the cloud, as there is the possibility that their privacy could be violated, since this data will be stored on servers that are accessible over the Internet, although it is also true that there are ways to reduce these levels of vulnerability through VPN tunnels, encrypted and segmentated communications, access to infrastructure by authentication mechanisms, among others. It will always be difficult to ensure the safety of these systems that are hosted in remote locations. In the same line of ideas, and issue with the control of the information arises, as there is a thin membrane that some trends debate about whether these companies have actually control over its own information or not, when it comes to cloud systems~\footnote{http://www.theguardian.com/technology/2008/sep/29/cloud.computing.richard.stallman}~\footnote{http://www.linuxjournal.com/content/stallman-vs-clouds}.

There is no magic formula or pattern to indicate whether the move to the cloud is beneficial or not for a given company, every case should be analyzed rigorously based on its conditions. In the case of Netnovation this decision was already taken, and indeed the leap to the cloud had already been taken since some time ago. 

Based upon the elements that should be analyzed to eventually operate in the cloud, the availability of hosted services is one of them, which directly impacts over the business continuity. To strengthen this eslabon emerge the HA systems, with multiple alternatives to be evaluated to achieve this goal, making it necessary to use methodologies to effectively choose the solution that best suits the needs raised. Elements for consideration can be varied, however there are guidelines set by end users (the companies involved in the transformation) demanding agile decisions and hardly allowing in-depth and detailed analysis of the available options, many companies summarize this to a single phrase "time is money".

To overcome this phenomenon, methods such as LUM can be used, which guide the process of adopting new technologies and somehow accelerate it assuming that \textit{the user is likely to choose the solution that requires the least effort}.

Data mining tools as Metrics Grimoire opportunely complement the decision making process, by filling out the pitfalls that models as LUM may have or due to insufficient research in the first place. These show objectively and through specific metrics, behavior of F$\ell$OSS projects and help to the right choice of certain solutions.

In the process of choosing a solution, two major and differentiated alternatives were analyzed, the enterprise embedded solutions versus modular FLOSS tools, being both completely valid but ultimately restricted to the guidelines set by Netnovation. One of them aims at the absorption of the implemented technologies, doing the minimum possible use of the commercial support offered by the software vendors and minimizing payment of support licenses available in this scheme. This certainly has a direct impact on the time invested to obtain the necessary knowledge skills, as well as human and material resources that are required to achieve the goal. In the long term also is increased the complexity of the supported infrastructure, although whenever there is a suitable architecture, workflow definition and proper documentation of the infrastructure, it will be possible to handle it.

The solution based on independent FLOSS tools geared successfully with the requirement initially raised, which was to provide a high availability solution for the Zimbra E-mail and collaboration system used by Netnovation, incorporating new technologies to the existing scheme and avoiding disruptive changes on the operational infrastructure.

Within the significance and contribution of the research carried out are found a few important ones. First, the fact that it has been provided an actual solution for the stated problem, it has been implemented a laboratory with an stagging environment similar to production, giving rise to a less distant adaptation from the current schema. Second, the implementation of HA in one of the systems of the infrastructure serves as an example for the deployment of this functionality on other services offered by Netnovation, such as Webservers in Apache, Databases in MySQL, Applications in Tomcat and so on. Lastly, this exercise puts in evidence the potential of FLOSS and its possibilities in the world of private enterprise providing reliable solutions which can compete with other corporate products on the market.

It has been shown that there are models, guidelines and concrete metrics to evaluate F$\ell$OSS projects, however, this research does not make a comprehensive analysis of the tools available nowadays. Such tools are for instance OpenBRR~\cite{Wasserman}, QSoS~\cite{QSOS}, QualOSS~\cite{QOSS} or the Open Source Maturity Model~\cite{OSMM}, through which it is possible to do a more rigorous analysis that lead to the choice of solutions based on specific qualitative and quantitative concrete values.

To the extent that it is sufficient time and resources to develop a more detailed analysis for available alternatives and its feasibility of implementation, as well as a wider range of decision regarding the conditions set by the customer, it would be suitable to evaluate the implementation of more comprehensive, integrated solutions that require less configuration and orchestration of independent technologies. For instance considering the adoption of solutions such as OpenStack~\footnote{https://www.openstack.org/}, Cloudstack~\footnote{https://cloudstack.apache.org/}, Eucalyptus~\footnote{https://www.eucalyptus.com/} or OpenNebula~\footnote{http://opennebula.org/} which handle other HA schemes for cloud services.




*** ADDITIONAL FIGURES w/SCREENSHOTS OF IMPLEMENTED SYSTEM *** ???



REFERENCES
- * Tools and metrics: Page 106 Sergio's TFM *
  Python, matplotlib [mat14a], has been used to generate graphics for certain metrics.
  A python 2d plotting library. 2014. http://matplotlib.org

APPENDIX
- Include python scripts (for graphics charts from RESULTS AND DISCUSSION)


====================================================================================================

Abo Akademi University Lazy User Model
Essays, UK. (November 2013). The Lazy Model In Information Technology Information Technology Essay. Retrieved from http://www.ukessays.com/essays/information-technology/the-lazy-model-in-information-technology-information-technology-essay.php?cref=1


\bibitem{Collan and Tetard} Collan M. and Tetard F. \textit{Lazy User Theory of Solution Selection}. Proceedings of the CELDA 2007 Conference. Portugal, December 2007.

\bibitem{Collan and Tetard LUM PS} Collan M. and Tetard F. \textit{Lazy User Theory: A Dynamic Model to Understand User Selection of Products and Services}. 42nd Hawaii International Conference on System Sciences. 2009.

\bibitem{Daffara1} Daffara, Carlo. \textit{The SME guide to Open Source Software}. FLOSSMETRICS EU. July 2009. DOI=http://smeguide.conecta.it/smeguide.pdf

\bibitem{Daffara2} Daffara, Carlo. \textit{The economic value of Open Source software}. Conecta Research. Italy, July 2012. DOI=http://carlodaffara.conecta.it/category/oss-business-models/

\bibitem{Fogel} Fogel, Karl. \textit{Producing Open Source Software: How to Run a Successful Free Software Project}. O'Reilly, 2005.

\bibitem{ISO} International Organization for Standardization Technical Committee 223. \textit{ISO/PAS 22399:2007}. International Organization for Standardization, December 2007. DOI=https://www.iso.org/obp/ui/\#iso:std:iso:pas:22399:ed-1:v1:en

\bibitem{Mell and Grance} Mell, Peter and Grance, Timothy. \textit{The NIST Definition of Cloud Computing}. National Institute of Standards and Technology, September 2011.

\bibitem{Tanja and Schraitle} Tanja R. and Schraitle T. \textit{High Availability Guide.} SUSE LLC and contributors. 2014.

\bibitem{Wasserman et. all} Wasserman A., Pal M. and Chan C. \textit{The Business Readiness Rating Model: an Evaluation Framework for Open Source}. Proceedings of the EFOSS: OpenBRR Workshop. Italy, June 2006.



\bibitem{} . \textit{}. . . DOI=
\bibitem{} . \textit{}. . . DOI=

---

Collan, M. and Tetard, F., Lazy User Model: Solution Selection and Discussion about Switching Costs. DOI=http://link.springer.com/chapter/10.1007%2F978-3-642-22766-0_7

[Fogel, 2002] Fogel Karl. "Producing Open Source Software: How to Run a Successful Free Software Project". O'Reilly Media, 2005. p. 1-202.

Business Model - Taxonomy:
http://carlodaffara.conecta.it/category/oss-business-models/

\bibitem{Barahona & Ortega} Gonzalez-Barahona, Jesus and Ortega, Felipe. \textit{Economic Aspects of Libre Software}. GSyC/LibreSoft, Universidad Rey Juan Carlos. Spain, November 2011.

Hewlett-Packard. Data sheet HP Serviceguard Solutions for Linux. Hewlett-Packard Development Company, L.P. 2014.
http://h20195.www2.hp.com/v2/GetDocument.aspx?docname=4AA4-1792ENW&doctype=data%20sheet&doclang=EN_US

http://opensource.com/resources/ebooks
