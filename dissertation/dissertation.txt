COVER
LICENSE
ABSTRACT
ACKNOWLEDGEMENTS
CONTENTS
LIST OF FIGURES
LIST OF TABLES

1. INTRODUCTION
  - Document structure, the way the dissertation is going to be organized

2. PROBLEM STATEMENT

  There is a problem in ___________(societal organization). 
  Despite _________________ (something that should be happening) ___________ is occurring. 
  [provided supporting evidence]. 
  This problem has negatively impacted ____________(victims of problem) because _________________. 
  A possible cause of this problem is ___________.
  Perhaps a study which investigates ___________ by ________(paradigm/method) could remedy the situation.

  * Describe the "ideal" state of affairs
  - Start by describing how things should work. 
  - Before you even mention your problem, explain in a few sentences how things would be if the problem didn't exist

  * Explain your problem
  - Succinctly summarize the problem you intend to solve
  - "However, ..." to show that the problem you've identified is what is preventing the ideal vision from being a reality

  * Explain your problem's financial costs?
  - Explain why it's a big deal, no one has the time or resources to try to solve every single minor problem
  - In the business world, money is almost always the bottom line, so you'll want to try to highlight the financial impact of your problem on the company or organization
  - Is it damaging your brand image and thus indirectly costing your business money? (i.e. SLAs)

  * Back up your assertions
  - Propose reasonable evidence
  - From your own research, from data from a related study or project, or even from reputable third-party sources

  * Propose a solution
  - Explanation of the solution should be written to be as clear and concise as possible
  - Stick to big, important, concrete concepts and leave any minor details for later

  * Explain the benefits of the solution
  - Explain why this solution is a good idea
  - Which new forms of revenue it will generate (quality services to customers)

  * Conclude by summarizing the problem and solution
  - Conclude with a summary of your main arguments that allows you transition easily into the main body of your proposal
  - State in just a few sentences


    2.1. JUSTIFICATION / MOTIVATION
      - The reasons why this study was carried out
      -  research carried out to fulfil the demands of a business organisation
      
    2.2. OBJETIVES
	- General objetives
	- Specific objetives
	
    2.3. SCOPE

3. PRECEDENTS / RELEATED TECHNOLOGIES / STATE OF THE ART

    - High Availability solutions based in FLOSS

    - Commercial cluster software

  SUSE Linux Enterprise High Availability Extension (https://www.suse.com/products/highavailability)
  1-Year Subscription 590,00€ (2 sockets)
  3-Year Subscription 1.570,00€ (2 sockets)
  5-Year Subscription 2.330,00€ (2 sockets)

  openSUSE:High Availability (https://en.opensuse.org/openSUSE:High_Availability)
  includes a suite of high availability clustering software, notably 
  Corosync (http://corosync.github.io/corosync)
  Pacemaker (http://clusterlabs.org)
  DRBD (http://www.drbd.org)
  OCFS2 (http://oss.oracle.com/projects/ocfs2)

  Red Hat Enterprise Linux Cluster, High Availability, and GFS
  Red Hat cluster suite
  RH High-Availability Add-On (Red Hat's implementation of Linux-HA)
  RH Messaging Realtime Grid (MRG)

  Linux-HA
  

  provides features based on C programming languaje, implementing high availability within applications, through virtual synchrony for replicated state machines, simple availability handling responsible for applications restart when fail, it keeps configuration and statistics in a memory database providing the ability to set, retrieve, and receive change notifications of information, and a quorum system that notifies applications when it is achieved or lost.

  an open source high availability resource manager software used on computer clusters since 2004
  
  It implements APIs for resources controll, including the Open Cluster Framework (OCF).
  
  It was part of the Linux-HA project until 2007, then was split out to be its own project.

  is a command-line interface to the Pacemaker cluster resource management stack
  
  initially, the crm shell was distributed as part of the Pacemaker project. It was split into its own, separate project in 2011.
  
  manages the cluster configuration and provides configuration information to other cluster components in a Red Hat cluster. CCS runs in each cluster node and makes sure that the cluster configuration file in each cluster node is up to date.
  
  
  
4. METHODOLOGY
    - Qualitative/Quantitative Research Methods to select the technologies used

    ?. OpenBRR...?


5. ARCHITECTURE

    5.1. Netnovation...?

    - Implement an inexpensive high-availability solution for our business-critical needs without requiring the use of expensive additional hardware or software
    
    - Complexity and advanced planning no needed

    - i.e. Two sets of simple storage devices are less expensive than a dual-port RAID box of similar capacity

    - Cluster Load Balancing
      Is difficult when read/write or transactional type of services such as e-mail or database access
      It would also require the disk mirroring to be near-instantaneous and use lots of distributed locking techniques
      
      In a two-node cluster, half of the required services on node 'A' and the other half on node 'B'
      A mutual failover configuration is employed so that if node A fails, node B would take over all of its services and vice versa

      http://www.linuxjournal.com/article/3247?page=0,1

      A symmetric general purpose kernel based cluster manager, formed by a Connection Manager (cnxman) and a Service Manager (sm). The first one handles membership, messaging, quorum, event notification and transitions, and the second one is responsible for instances of external systems.
      
      in order to be specific in this exercise,
      
      
      
      
    5.2. Infrastructure
    5.3. Hardware
    
    PowerEdge Rack Servers
    Unified Threat Management Firewall
    Netgear Gigabit Ports and 24 PoE Ports
    20U RACK CABINET
    Intel Xeon CPU
    Small Computer System Interface
    hard disk drive
    
    5.4. Network
    5.5. Software
    5.6. Overall Scheme


\begin{table}
\centering
\begin{tabular}{ | l | c | r | }
  \hline
  1 & 2 
  \\
  4 & 5
  \hline
\end{tabular}  
\caption{Software Supporting the Infrastructure}
\label{table:technologies}
\end{table}
    
    
UTM Endian Firewall
Company: Endian S.r.l.
Industry: Unified Threat Management
License: GNU GPL
Website: endian.com
Description: A linux security distribution with full featured Unified Threat Management functionality. Include a stateful packet inspection firewall, application-level proxies for various protocols, antivirus support, virus and spam-filtering for email traffic, content filtering of Web traffic, also an OpenVPN solution. Distribution based on Red Hat.
Supported Platforms: GNU/Linux
Commercial support: by annual subscription
    

Proxmox VE
Company: Proxmox Server Solutions GmbH
Industry: Server Virtualization
License: GNU Affero and GPLv3
Website: pve.proxmox.com
Description: virtualization management solution for servers, based on KVM and containers Server Virtualization Platform, provides KVM and OpenVZ hypervisors. Distribution based on Debian.
Supported Platforms: GNU/Linux
Commercial support: annual subscription

FreeNAS
Company: iXsystems, Inc.
Type: Computer Storage
License: BSD 2-Clause
Website: freenas.org
Description: network-attached storage server, supporting many network and storage protocols such as Samba and NFS. Also supports ZFS. Distribution based on FreeBSD.
Supported Platforms: BSD Unix
Commercial support: custom quotes and support tickets

Zabbix
Company: Zabbix SIA
Industry: IT Monitoring
License: GNU GPLv2
Website: zabbix.com
Description: solution for monitoring of networks, applications and databases
Supported Platforms: GNU/Linux
Commercial support: custom quotes and support tickets 

---

6. IMPLEMENTATION    

    6.1. Technical specifications of implemented FLOSS tools
    6.2. Tests and validation
    6.3. Other considerations

7. RESULTS AND DISCUSSION

8. CONCLUSIONS AND FUTURE WORK

REFERENCES
APPENDIX

====================================================================================================

\bibitem{Fogel} Fogel, Karl. \textit{Producing Open Source Software: How to Run a Successful Free Software Project}. O'Reilly, 2005.  

\bibitem{ISO} International Organization for Standardization Technical Committee 223. \textit{ISO/PAS 22399:2007}. International Organization for Standardization, December 2007. DOI=https://www.iso.org/obp/ui/#iso:std:iso:pas:22399:ed-1:v1:en
  
\bibitem{Mell & Grance} Mell, Peter and Grance, Timothy. \textit{The NIST Definition of Cloud Computing}. National Institute of Standards and Technology, September 2011.

\bibitem{Daffara1} Daffara, Carlo. \textit{The SME guide to Open Source Software}. FLOSSMETRICS EU. July 2009. DOI=http://smeguide.conecta.it/smeguide.pdf

\bibitem{Daffara2} Daffara, Carlo. \textit{The economic value of Open Source software}. Conecta Research. Italy, July 2012. DOI=http://carlodaffara.conecta.it/category/oss-business-models/

\bibitem{Collan & Tétard} Collan M. and Tetard F. \textit{Lazy User Theory of Solution Selection}. Proceedings of the CELDA 2007 Conference. Portugal, December 2007.

\bibitem{Wasserman et. all} Wasserman A., Pal M. and Chan C. \textit{The Business Readiness Rating Model: an Evaluation Framework for Open Source}. Proceedings of the EFOSS: OpenBRR Workshop. Italy, June 2006.


\bibitem{} . \textit{}. . . DOI=



---

Franck Tetard, Mikael Collan, "Lazy User Theory: A Dynamic Model to Understand User Selection of Products and Services," hicss, pp. 1–9, 42nd Hawaii International Conference on System Sciences, 2009

Collan, M. and Tetard, F., Lazy User Model: Solution Selection and Discussion about Switching Costs. DOI=http://link.springer.com/chapter/10.1007%2F978-3-642-22766-0_7

[Fogel, 2002] Fogel Karl. "Producing Open Source Software: How to Run a Successful Free Software Project". O'Reilly Media, 2005. p. 1-202.

Business Model - Taxonomy:
http://carlodaffara.conecta.it/category/oss-business-models/

\bibitem{Barahona & Ortega} Gonzalez-Barahona, Jesus and Ortega, Felipe. \textit{Economic Aspects of Libre Software}. GSyC/LibreSoft, Universidad Rey Juan Carlos. Spain, November 2011.

http://opensource.com/resources/ebooks

